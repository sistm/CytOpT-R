[{"path":"https://sistm.github.io/CytOpT-R/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://sistm.github.io/CytOpT-R/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://sistm.github.io/CytOpT-R/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://sistm.github.io/CytOpT-R/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://sistm.github.io/CytOpT-R/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://sistm.github.io/CytOpT-R/articles/CytOpt_HIPC.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"User guide for executing `CytOpT` on `HIPC` data","text":"CytOpT supervised method directly estimates cell proportions flow-cytometry data set using source gating input relies regularized optimal transport.","code":""},{"path":"https://sistm.github.io/CytOpT-R/articles/CytOpt_HIPC.html","id":"analysis-of-hipc-data","dir":"Articles","previous_headings":"","what":"Analysis of HIPC data","title":"User guide for executing `CytOpT` on `HIPC` data","text":"illustrative example, analyze flow cytometry data T-cell panel Human Immunology Project Consortium (HIPC) publicly available ImmuneSpace Gottardo et al. [2014]. HIPC data set following structure (split 2 files): xx_y_values: flow-cytometry measurements xx_y_clust: file corresponding manual clustering , xx denotes center data analysis performed, y denotes patient replicate biological sample question.","code":""},{"path":"https://sistm.github.io/CytOpT-R/articles/CytOpt_HIPC.html","id":"data-load","dir":"Articles","previous_headings":"Analysis of HIPC data","what":"Data load","title":"User guide for executing `CytOpT` on `HIPC` data","text":"first lines flow-cytometry measurements patient 1228 replicate 1A: manual clustering data 10 cell populations (CD8 Effector, CD8 Naive, CD8 Central Memory, CD8 Effector Memory, CD8 Activated, CD4 Effector, CD4 Naive, CD4 Central Memory, CD4 Effector Memory, CD4 Activated) can accessed HIPC_Stanford_1228_1A_labels object. use manual gating patient 1228 replicate 1A source proportions infer proportions patient 1369 replicate 1A.","code":"library(CytOpT) data(\"HIPC_Stanford\") knitr::kable(head(HIPC_Stanford_1228_1A))"},{"path":"https://sistm.github.io/CytOpT-R/articles/CytOpt_HIPC.html","id":"computation-of-the-benchmark-class-proportions-for-target-data","dir":"Articles","previous_headings":"Analysis of HIPC data","what":"Computation of the benchmark class proportions for target data","title":"User guide for executing `CytOpT` on `HIPC` data","text":"example, know true proportions target data set HIPC_Stanford_1369_1A, can assess gap estimate form CytOpt cellular proportions reference manual gating. purpose, compute manual proportions :","code":"gold_standard_manual_prop <- c(table(HIPC_Stanford_1369_1A_labels)/length(HIPC_Stanford_1369_1A_labels))"},{"path":[]},{"path":"https://sistm.github.io/CytOpT-R/articles/CytOpt_HIPC.html","id":"optimization","dir":"Articles","previous_headings":"Analysis of HIPC data > CytOpT","what":"Optimization","title":"User guide for executing `CytOpT` on `HIPC` data","text":"","code":"set.seed(123) res <- CytOpT(X_s = HIPC_Stanford_1228_1A, X_t = HIPC_Stanford_1369_1A,                Lab_source = HIPC_Stanford_1228_1A_labels,               theta_true = gold_standard_manual_prop,               method='both', monitoring = TRUE)"},{"path":"https://sistm.github.io/CytOpT-R/articles/CytOpt_HIPC.html","id":"results","dir":"Articles","previous_headings":"Analysis of HIPC data > CytOpT","what":"Results","title":"User guide for executing `CytOpT` on `HIPC` data","text":"results CytOpt optimization algorithms : visualizations provided plot() method:","code":"summary(res) plot(res)"},{"path":"https://sistm.github.io/CytOpT-R/articles/CytOpt_HIPC.html","id":"performance-evaluation","dir":"Articles","previous_headings":"Analysis of HIPC data > CytOpT","what":"Performance evaluation","title":"User guide for executing `CytOpT` on `HIPC` data","text":"Concordance manual gating gold-standard CytOpt estimation can graphically diagnosed Bland-Altman plots: methods implemented CytOpt package detailed following article: Paul Freulon, Jérémie Bigot, Boris P. Hejblum. CytOpT: Optimal Transport Domain Adaptation Interpreting Flow Cytometry data https://arxiv.org/abs/2006.09003","code":"Bland_Altman(res$proportions)"},{"path":"https://sistm.github.io/CytOpT-R/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Boris Hejblum. Author, maintainer. Paul Freulon. Author. Kalidou Ba. Author, translator.","code":""},{"path":"https://sistm.github.io/CytOpT-R/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Freulon P, Bigot J, Hejblum BP (2020). CytOpT: Optimal Transport Domain Adaptation Interpreting Flow Cytometry data. arXiv 2006.09003.","code":"@Article{freulon2020cytopt,   title = {CytOpT: Optimal Transport with Domain Adaptation for Interpreting Flow Cytometry data},   author = {{Freulon} and {Paul} and {Bigot} and {J'{e}r'{e}mie} and {Hejblum} and Boris P},   journal = {arXiv},   year = {2020},   pages = {2006.09003},   url = {https://arxiv.org/abs/2006.09003}, }"},{"path":"https://sistm.github.io/CytOpT-R/index.html","id":"cytopt-","dir":"","previous_headings":"","what":"Optimal Transport for Gating Transfer in Cytometry Data with Domain Adaptation","title":"Optimal Transport for Gating Transfer in Cytometry Data with Domain Adaptation","text":"CytOpT uses regularized optimal transport directly estimate different cell population proportions biological sample characterized flow cytometry measurements.","code":""},{"path":"https://sistm.github.io/CytOpT-R/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Optimal Transport for Gating Transfer in Cytometry Data with Domain Adaptation","text":"CytOpT R package provides new algorithm relying regularized optimal transport directly estimate different cell population proportions biological sample characterized flow cytometry measurements. Algorithm based regularized Wasserstein metric compare cytometry measurements different samples, thus accounting possible mis-alignment given cell population across sample (due technical variability technology measurements). main function package CytOpT(). methods implemented package detailed following article: Paul Freulon, Jérémie Bigot, Boris P. Hejblum. CytOpT: Optimal Transport Domain Adaptation Interpreting Flow Cytometry data https://arxiv.org/abs/2006.09003","code":""},{"path":"https://sistm.github.io/CytOpT-R/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Optimal Transport for Gating Transfer in Cytometry Data with Domain Adaptation","text":"can install load CytOpT R CRAN following commands: Alternatively, can install development version CytOpT like :","code":"install.packages(\"CytOpT\") library(CytOpT) remotes::install_github(\"sistm/CytOpT-R\") library(CytOpT)"},{"path":"https://sistm.github.io/CytOpT-R/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Optimal Transport for Gating Transfer in Cytometry Data with Domain Adaptation","text":"basic example CytOpt usage:","code":""},{"path":"https://sistm.github.io/CytOpT-R/index.html","id":"data-import","dir":"","previous_headings":"Example","what":"Data import","title":"Optimal Transport for Gating Transfer in Cytometry Data with Domain Adaptation","text":"","code":"library(CytOpT) # Load source Data data(\"HIPC_Stanford\") # Define the true proportions in the target data set gold_standard_manual_prop <- c(table(HIPC_Stanford_1369_1A_labels)/length(HIPC_Stanford_1369_1A_labels))"},{"path":"https://sistm.github.io/CytOpT-R/index.html","id":"proportion-estimations-using-optimal-transport-and-minmax-swapping-procedures","dir":"","previous_headings":"Example","what":"Proportion estimations using optimal transport and minmax swapping procedures","title":"Optimal Transport for Gating Transfer in Cytometry Data with Domain Adaptation","text":"","code":"# Run CytOpt and compare the two optimization methods res <- CytOpT(X_s = HIPC_Stanford_1228_1A, X_t = HIPC_Stanford_1369_1A,                Lab_source = HIPC_Stanford_1228_1A_labels,               theta_true = gold_standard_manual_prop,               eps = 0.0001, lbd = 0.0001, n_iter = 10000, n_stoc=10,               step_grad = 10, step = 5, power = 0.99,                method='both', monitoring=TRUE) #> Running Descent-ascent optimization... #> Done in 1.1 mins #> Running MinMax optimization... #> Done in 15.3 secs summary(res) #> Estimation of cell proportions with Descent-Ascent and MinMax swapping from CytOpt: #>                     Gold_standard Descent_ascent      MinMax #> CD8 Effector          0.017004001    0.051811765 0.044949922 #> CD8 Naive             0.128736173    0.088553804 0.101069760 #> CD8 Central Memory    0.048481996    0.036842527 0.036233461 #> CD8 Effector Memory   0.057484114    0.062380003 0.070825666 #> CD8 Activated         0.009090374    0.017439071 0.005579535 #> CD4 Effector          0.002324076    0.007844185 0.007394887 #> CD4 Naive             0.331460344    0.360283016 0.332733654 #> CD4 Central Memory    0.281713344    0.203949350 0.204808587 #> CD4 Effector Memory   0.102082843    0.156117274 0.169102276 #> CD4 Activated         0.021622735    0.014779005 0.027302251 #>  #> Final Kullback-Leibler divergences: #>  Descent-Ascent MinMax swapping  #>      0.06534157      0.05700472  #> Number of iterations: #>  Descent-Ascent MinMax swapping  #>            5000           10000 plot(res) #> Plotting KL divergence for iterations 10 to 1000 while there were at least 5000 iterations performed for each method. Bland_Altman(res$proportions)"},{"path":"https://sistm.github.io/CytOpT-R/reference/Bland_Altman.html","id":null,"dir":"Reference","previous_headings":"","what":"Bland & Altman plot — Bland_Altman","title":"Bland & Altman plot — Bland_Altman","text":"Function display Bland & Altman plot order visually assess agreement CytOpt estimation class proportions estimate class proportions provided manual gating.  Requires either theta_true Lab_target provided running CytOpT().","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/Bland_Altman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bland & Altman plot — Bland_Altman","text":"","code":"Bland_Altman(proportions, additional_info_shape = NULL)"},{"path":"https://sistm.github.io/CytOpT-R/reference/Bland_Altman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bland & Altman plot — Bland_Altman","text":"proportions data.frame true estimated proportion returned CytOpT(). additional_info_shape vector additional information used shape plot. implemented yet. #'@return ggplot object","code":""},{"path":[]},{"path":"https://sistm.github.io/CytOpT-R/reference/Bland_Altman.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bland & Altman plot — Bland_Altman","text":"","code":"if(interactive()){  gold_standard_manual_prop <- c(table(HIPC_Stanford_1369_1A_labels) /  length(HIPC_Stanford_1369_1A_labels)) res <- CytOpT(X_s = HIPC_Stanford_1228_1A, X_t = HIPC_Stanford_1369_1A,               Lab_source = HIPC_Stanford_1228_1A_labels,              theta_true = gold_standard_manual_prop,              eps = 0.0001, lbd = 0.0001, n_iter = 10000, n_stoc=10,              step_grad = 10, step = 5, power = 0.99,               method='both') Bland_Altman(res$proportions)  }"},{"path":"https://sistm.github.io/CytOpT-R/reference/CytOpT.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nthe computation of the estimate of the class proportions is done with a descent ascent or minmax\nor two algorithms. — CytOpT","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nthe computation of the estimate of the class proportions is done with a descent ascent or minmax\nor two algorithms. — CytOpT","text":"Function estimate type cell proportions unclassified cytometry data set denoted X_s using classification Lab_source cytometry data set X_s. function computation estimate class proportions done descent ascent minmax two algorithms.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/CytOpT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nthe computation of the estimate of the class proportions is done with a descent ascent or minmax\nor two algorithms. — CytOpT","text":"","code":"CytOpT(   X_s,   X_t,   Lab_source,   Lab_target = NULL,   theta_true = NULL,   method = c(\"minmax\", \"desasc\", \"both\"),   eps = 1e-04,   n_iter = 10000,   power = 0.99,   step_grad = 10,   step = 5,   lbd = 1e-04,   n_out = 5000,   n_stoc = 10,   minMaxScaler = TRUE,   monitoring = FALSE,   thresholding = TRUE )"},{"path":"https://sistm.github.io/CytOpT-R/reference/CytOpT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nthe computation of the estimate of the class proportions is done with a descent ascent or minmax\nor two algorithms. — CytOpT","text":"X_s cytometry dataframe d numerical variables ns observations.  columns correspond different biological markers measured. One line corresponds cytometry measurements performed one cell. classification Cytometry data set must provided Lab_source parameters. X_t cytometry dataframe d numerical variables nt observations.  columns correspond different biological markers measured. One line corresponds cytometry measurements performed one cell. CytOpT algorithm targets cell type proportion Cytometry data set Lab_source vector length ns Classification X_s cytometry data set Lab_target vector length nt Classification X_s cytometry data set theta_true available, gold-standard proportions target data  set X_t derived manual gating. allows assess gap  estimate gold-standard. Default NULL, case  assessment performed. method character string indicating method use compute cytopt, either 'minmax', 'desasc'  '' comparing Min-max swapping descent-ascent procedures. Default 'minmax'. eps float value regularization parameter Wasserstein distance. Default 1e-04 n_iter integer Constant iterate method select. Default 10000 power float constant step size policy gradient ascent method step/n^power. Default 0.99 step_grad integer number step size gradient descent algorithm outer loop. Default 10 step integer constant multiply step-size policy. Default 5 lbd float constant multiply step-size policy. Default 1e-04 n_out integer number iterations outer loop. loop corresponds gradient descent algorithm minimize regularized Wasserstein distance source target data sets. Default 1000 n_stoc integer number iterations inner loop. loop corresponds stochastic algorithm approximates maximizer semi dual problem. Default 10 minMaxScaler logical flag indicating whether scale observations  0 1. Default TRUE. monitoring logical flag indicating possibly monitor gap estimated proportions manual gold-standard. Default FALSE. thresholding logical flag indicating whether threshold negative  values.  Default TRUE.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/CytOpT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nthe computation of the estimate of the class proportions is done with a descent ascent or minmax\nor two algorithms. — CytOpT","text":"object class CytOpt, list two elements: proportions data.frame (optionally true )    estimated proportions method monitoring list estimates optimization iterations   method (listed within)","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/CytOpT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nthe computation of the estimate of the class proportions is done with a descent ascent or minmax\nor two algorithms. — CytOpT","text":"","code":"if(interactive()){  res <- CytOpT(X_s = HIPC_Stanford_1228_1A, X_t = HIPC_Stanford_1369_1A,               Lab_source = HIPC_Stanford_1228_1A_labels,              method='minmax') summary(res) plot(res)  }"},{"path":"https://sistm.github.io/CytOpT-R/reference/HIPC_Stanford.html","id":null,"dir":"Reference","previous_headings":"","what":"HIPC_Stanford data — HIPC_Stanford","title":"HIPC_Stanford data — HIPC_Stanford","text":"HIPC T cell data set HIPC program patients 1228 1369 (replicate 1A Stanford).","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/HIPC_Stanford.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HIPC_Stanford data — HIPC_Stanford","text":"","code":"data(HIPC_Stanford)"},{"path":"https://sistm.github.io/CytOpT-R/reference/HIPC_Stanford.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HIPC_Stanford data — HIPC_Stanford","text":"data composed 4 objects: HIPC_Stanford_1228_1A: data.frame 31342 cells 7 markers. HIPC_Stanford_1228_1A_labels: factor vector cell type  31342 observed cells. HIPC_Stanford_1369_1A: data.frame 33992 cells 7 markers. HIPC_Stanford_1369_1A_labels: factor vector cell type  33992 observed cells.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/HIPC_Stanford.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"HIPC_Stanford data — HIPC_Stanford","text":"https://www.immuneprofiling.org/hipc/page/show  https://www.immunespace.org/  https://www.immunespace.org/project/HIPC/Lyoplate/begin.view?pageId=study.DATA_ANALYSIS","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/HIPC_Stanford.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HIPC_Stanford data — HIPC_Stanford","text":"immunophenotyping T cell panel Lyoplate HIPC dataset  used part FlowCAP III Lyoplate challenge. Flow cytometry data set HIPC T-cell panel study.  HIPC T-cell panel study, Flow cytometry measured 3 samples  3 patients (IDs: 1228, 1349 1369) 3 replicates (1A, 2B 3C)  7 centers (NHLBI, Yale, UCLA, CIMR, Baylor, Stanford Miami), .e. 63  data sets total. Manual gating performed different centers  cluster te observed cells one 10 cellular populations: CD8 Effector CD8 Naive CD8 Central Memory CD8 Effector Memory CD8 Activated CD4 Effector CD4 Naive CD4 Central Memory CD4 Effector Memory CD4 Activated","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/HIPC_Stanford.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"HIPC_Stanford data — HIPC_Stanford","text":"Maecker HT, McCoy JP & Nussenblatt R (2012). Standardizing  immunophenotyping human immunology project. Nature Reviews Immunology,  12(3):191--200. DOI: 10.1038/nri3158 Finak G, Langweiler M, Jaimes M, Malek M, Taghiyar J, Korin Y, Raddassi K,  Devine L, Obermoser G, Pekalski ML, Pontikos N, Diaz , Heck S, Villanova F,  Terrazzini N, Kern F, Qian Y, Stanton R, Wang K, Brandes , Ramey J,  Aghaeepour N, Mosmann T, Scheuermann RH, Reed E, Palucka K, Pascual V,  Blomberg BB, Nestle F, Nussenblatt RB, Brinkman RR, Gottardo R, Maecker H &  McCoy JP (2016). Standardizing Flow Cytometry Immunophenotyping Analysis Human  ImmunoPhenotyping Consortium. Scientific Reports. 10(6):20686. DOI: 10.1038/srep20686.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/KL_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Kullback-Leibler divergence plot — KL_plot","title":"Kullback-Leibler divergence plot — KL_plot","text":"plotting function displaying Kullback-Liebler (KL) divergence across  iterations optimization algorithm(s).","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/KL_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kullback-Leibler divergence plot — KL_plot","text":"","code":"KL_plot(   monitoring,   n_0 = 10,   n_stop = 1000,   title = \"Kullback-Liebler divergence trace\" )"},{"path":"https://sistm.github.io/CytOpT-R/reference/KL_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kullback-Leibler divergence plot — KL_plot","text":"monitoring list monitoring estimates CytOpt() output. n_0 first iteration plot. Default 10. n_stop last iteration plot. Default 1000. title plot title. Default \"Kullback-Liebler divergence trace\".","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/KL_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kullback-Leibler divergence plot — KL_plot","text":"ggplot object","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/KL_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kullback-Leibler divergence plot — KL_plot","text":"","code":"if(interactive()){  gold_standard_manual_prop <- c(table(HIPC_Stanford_1369_1A_labels) /   length(HIPC_Stanford_1369_1A_labels)) res <- CytOpT(X_s = HIPC_Stanford_1228_1A, X_t = HIPC_Stanford_1369_1A,               Lab_source = HIPC_Stanford_1228_1A_labels,              theta_true = gold_standard_manual_prop,              eps = 0.0001, lbd = 0.0001, n_iter = 10000, n_stoc=10,              step_grad = 10, step = 5, power = 0.99,               method='both', monitoring = TRUE) plot(res)  }"},{"path":"https://sistm.github.io/CytOpT-R/reference/Label_Prop_sto_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes a classification on the target data — Label_Prop_sto_r","title":"Computes a classification on the target data — Label_Prop_sto_r","text":"Computes classification target data thanks approximation  transport plan classification source data. Transport plan approximated stochastic algorithm.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/Label_Prop_sto_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes a classification on the target data — Label_Prop_sto_r","text":"","code":"Label_Prop_sto_r(   X_s,   X_t,   Lab_source,   eps = 1e-04,   const = 0.1,   n_iter = 4000,   minMaxScaler = TRUE,   monitoring = TRUE,   thresholding = TRUE )"},{"path":"https://sistm.github.io/CytOpT-R/reference/Label_Prop_sto_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes a classification on the target data — Label_Prop_sto_r","text":"X_s cytometry dataframe. columns correspond different biological markers tracked. One line corresponds cytometry measurements performed one cell. classification Cytometry data set must provided Lab_source parameters. X_t cytometry dataframe. columns correspond different biological markers tracked. One line corresponds cytometry measurements performed one cell. CytOpT algorithm targets cell type proportion Cytometry data set Lab_source vector length n Classification X_s cytometry data set eps float value regularization parameter Wasserstein distance. Default 1e-04 const float constant. Default 1e-01 n_iter integer Constant iterate method select. Default 4000 minMaxScaler logical flag indicating possibly Scaler monitoring logical flag indicating possibly monitor gap estimated proportions manual gold-standard. Default FALSE thresholding logical flag.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/Label_Prop_sto_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes a classification on the target data — Label_Prop_sto_r","text":"ggplot object vector length nrow(X_t) propagated labels","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/Label_Prop_sto_r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes a classification on the target data — Label_Prop_sto_r","text":"","code":"if(interactive()){  res <- Label_Prop_sto_r(X_s = HIPC_Stanford_1228_1A, X_t = HIPC_Stanford_1369_1A,               Lab_source = HIPC_Stanford_1228_1A_labels)  }"},{"path":"https://sistm.github.io/CytOpT-R/reference/barplot_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to display a bland plot in order to visually assess the agreement between CytOpt estimation\nof the class proportions and the estimate of the class proportions provided through manual gating. — barplot_prop","title":"Function to display a bland plot in order to visually assess the agreement between CytOpt estimation\nof the class proportions and the estimate of the class proportions provided through manual gating. — barplot_prop","text":"Function display bland plot order visually assess agreement CytOpt estimation class proportions estimate class proportions provided manual gating.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/barplot_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to display a bland plot in order to visually assess the agreement between CytOpt estimation\nof the class proportions and the estimate of the class proportions provided through manual gating. — barplot_prop","text":"","code":"barplot_prop(proportions, title = \"\", xaxis_angle = 45)"},{"path":"https://sistm.github.io/CytOpT-R/reference/barplot_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to display a bland plot in order to visually assess the agreement between CytOpt estimation\nof the class proportions and the estimate of the class proportions provided through manual gating. — barplot_prop","text":"proportions data.frame (true ) estimated proportions CytOpt() title plot title. Default \"\", .e. title. xaxis_angle scalar indicating angle tilt labels x_axis. Default 45.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/barplot_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to display a bland plot in order to visually assess the agreement between CytOpt estimation\nof the class proportions and the estimate of the class proportions provided through manual gating. — barplot_prop","text":"ggplot object","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/barplot_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to display a bland plot in order to visually assess the agreement between CytOpt estimation\nof the class proportions and the estimate of the class proportions provided through manual gating. — barplot_prop","text":"","code":"if(interactive()){  res <- CytOpT(X_s = HIPC_Stanford_1228_1A, X_t = HIPC_Stanford_1369_1A,               Lab_source = HIPC_Stanford_1228_1A_labels,              eps = 0.0001, lbd = 0.0001, n_iter = 10000, n_stoc=10,              step_grad = 10, step = 5, power = 0.99,               method='minmax') barplot_prop(res$proportions)  }"},{"path":"https://sistm.github.io/CytOpT-R/reference/cytopt_desasc_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nthe computation of the estimate of the class proportions is done with a descent ascent algorithm. — cytopt_desasc_r","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nthe computation of the estimate of the class proportions is done with a descent ascent algorithm. — cytopt_desasc_r","text":"Function estimate type cell proportions unclassified cytometry data set denoted X_s using classification Lab_source cytometry data set X_s. function computation estimate class proportions done descent ascent algorithm.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/cytopt_desasc_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nthe computation of the estimate of the class proportions is done with a descent ascent algorithm. — cytopt_desasc_r","text":"","code":"cytopt_desasc_r(   X_s,   X_t,   Lab_source,   theta_true = NULL,   eps = 1e-04,   n_out = 5000,   n_stoc = 10,   step_grad = 10,   monitoring = FALSE )"},{"path":"https://sistm.github.io/CytOpT-R/reference/cytopt_desasc_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nthe computation of the estimate of the class proportions is done with a descent ascent algorithm. — cytopt_desasc_r","text":"X_s cytometry dataframe. columns correspond different biological markers tracked. One line corresponds cytometry measurements performed one cell. classification Cytometry data set must provided Lab_source parameters. X_t cytometry dataframe. columns correspond different biological markers tracked. One line corresponds cytometry measurements performed one cell. CytOpT algorithm targets cell type proportion Cytometry data set Lab_source vector length n Classification X_s cytometry data set theta_true available, gold-standard proportions target data  set X_t derived manual gating. allows assess gap  estimate gold-standard. Default NULL, case  assessment performed. eps float value regularization parameter Wasserstein distance. Default 1e-04. n_out integer number iterations outer loop. loop corresponds gradient descent algorithm minimize regularized Wasserstein distance source target data sets. Default 5000. n_stoc integer number iterations inner loop. loop corresponds stochastic algorithm approximates maximizer semi-dual problem. Default 10. step_grad integer number step size gradient descent algorithm  outer loop. Default 10. monitoring boolean indicating whether Kullback-Leibler divergence  monitored store throughout optimization iterations. Default FALSE.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/cytopt_desasc_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nthe computation of the estimate of the class proportions is done with a descent ascent algorithm. — cytopt_desasc_r","text":"list following elements:h_hat","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/cytopt_minmax_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nan additional regularization parameter on the class proportions enables a faster computation of the\nestimator. — cytopt_minmax_r","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nan additional regularization parameter on the class proportions enables a faster computation of the\nestimator. — cytopt_minmax_r","text":"Function estimate type cell proportions unclassified cytometry data set denoted X_s using classification Lab_source cytometry data set X_s. function additional regularization parameter class proportions enables faster computation estimator.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/cytopt_minmax_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nan additional regularization parameter on the class proportions enables a faster computation of the\nestimator. — cytopt_minmax_r","text":"","code":"cytopt_minmax_r(   X_s,   X_t,   Lab_source,   theta_true = NULL,   eps = 1e-04,   lbd = 1e-04,   n_iter = 10000,   step = 5,   power = 0.99,   monitoring = FALSE )"},{"path":"https://sistm.github.io/CytOpT-R/reference/cytopt_minmax_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nan additional regularization parameter on the class proportions enables a faster computation of the\nestimator. — cytopt_minmax_r","text":"X_s Cytometry data set. columns correspond different biological markers tracked. One line corresponds cytometry measurements performed one cell. classification Cytometry data set must provided Lab_source parameters. X_t Cytometry data set. columns correspond different biological markers tracked. One line corresponds cytometry measurements performed one cell. CytOpT algorithm targets cell type proportion Cytometry data set. Lab_source Classification X_s Cytometry data set theta_true available, gold-standard proportions target data  set X_t derived manual gating. allows assess gap  estimate gold-standard. Default NULL, case  assessment performed. eps Regularization parameter Wasserstein distance lbd float constant multiply step-size policy. Default 1e-04. n_iter integer Constant iterate method select. Default 10000. step Constant multiply step-size policy. Default 5. power step size policy gradient ascent method step/n^power. Default 0.99. monitoring boolean indicating whether Kullback-Leibler divergence  monitored store throughout optimization iterations. Default FALSE.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/cytopt_minmax_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to estimate the type cell proportions in an unclassified cytometry data set denoted X_s\nby using the classification Lab_source from an other cytometry data set X_s. With this function\nan additional regularization parameter on the class proportions enables a faster computation of the\nestimator. — cytopt_minmax_r","text":"list following elements:Results_Minmax","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/plot.CytOpt.html","id":null,"dir":"Reference","previous_headings":"","what":"CytOpt plot — plot.CytOpt","title":"CytOpt plot — plot.CytOpt","text":"plot S3 method CytOpt object","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/plot.CytOpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CytOpt plot — plot.CytOpt","text":"","code":"# S3 method for CytOpt plot(x, ...)"},{"path":"https://sistm.github.io/CytOpT-R/reference/plot.CytOpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CytOpt plot — plot.CytOpt","text":"x object class CytOpt plot. ... arguments passed methods. implemented.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/plot.CytOpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CytOpt plot — plot.CytOpt","text":"ggplot object, potentially composed  patchwork","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/plot.CytOpt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CytOpt plot — plot.CytOpt","text":"","code":"if(interactive()){  res <- CytOpT(X_s = HIPC_Stanford_1228_1A, X_t = HIPC_Stanford_1369_1A,               Lab_source = HIPC_Stanford_1228_1A_labels,              eps = 0.0001, lbd = 0.0001, n_iter = 10000, n_stoc=10,              step_grad = 10, step = 5, power = 0.99,               method='minmax') plot(res)  }"},{"path":"https://sistm.github.io/CytOpT-R/reference/print.CytOpt.html","id":null,"dir":"Reference","previous_headings":"","what":"CytOpt print — print.CytOpt","title":"CytOpt print — print.CytOpt","text":"print S3 method CytOpt object","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/print.CytOpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CytOpt print — print.CytOpt","text":"","code":"# S3 method for CytOpt print(x, ...)"},{"path":"https://sistm.github.io/CytOpT-R/reference/print.CytOpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CytOpt print — print.CytOpt","text":"x object class CytOpt print. ... arguments passed methods. implemented.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/print.CytOpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CytOpt print — print.CytOpt","text":"proportions data.frame x","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/print.CytOpt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CytOpt print — print.CytOpt","text":"","code":"if(interactive()){  res <- CytOpT(X_s = HIPC_Stanford_1228_1A, X_t = HIPC_Stanford_1369_1A,               Lab_source = HIPC_Stanford_1228_1A_labels,              eps = 0.0001, lbd = 0.0001, n_iter = 10000, n_stoc=10,              step_grad = 10, step = 5, power = 0.99,               method='minmax') print(res)  }"},{"path":"https://sistm.github.io/CytOpT-R/reference/print.summary.CytOpt.html","id":null,"dir":"Reference","previous_headings":"","what":"CytOpt print summary — print.summary.CytOpt","title":"CytOpt print summary — print.summary.CytOpt","text":"print S3 method summary.CytOpt object","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/print.summary.CytOpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CytOpt print summary — print.summary.CytOpt","text":"","code":"# S3 method for summary.CytOpt print(x, ...)"},{"path":"https://sistm.github.io/CytOpT-R/reference/print.summary.CytOpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CytOpt print summary — print.summary.CytOpt","text":"x object class summary.CytOpt print. ... arguments passed methods. implemented.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/summary.CytOpt.html","id":null,"dir":"Reference","previous_headings":"","what":"CytOpt summary — summary.CytOpt","title":"CytOpt summary — summary.CytOpt","text":"summary S3 method CytOpt object","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/summary.CytOpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CytOpt summary — summary.CytOpt","text":"","code":"# S3 method for CytOpt summary(object, ...)"},{"path":"https://sistm.github.io/CytOpT-R/reference/summary.CytOpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CytOpt summary — summary.CytOpt","text":"object object class CytOpt summarized. ... arguments passed methods. implemented.","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/summary.CytOpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CytOpt summary — summary.CytOpt","text":"list object","code":""},{"path":"https://sistm.github.io/CytOpT-R/reference/summary.CytOpt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CytOpt summary — summary.CytOpt","text":"","code":"if(interactive()){  res <- CytOpT(X_s = HIPC_Stanford_1228_1A, X_t = HIPC_Stanford_1369_1A,               Lab_source = HIPC_Stanford_1228_1A_labels,              eps = 0.0001, lbd = 0.0001, n_iter = 10000, n_stoc=10,              step_grad = 10, step = 5, power = 0.99,               method='minmax', monitoring=TRUE) summary(res)  }"},{"path":"https://sistm.github.io/CytOpT-R/news/index.html","id":"cytopt-094","dir":"Changelog","previous_headings":"","what":"CytOpT 0.9.4","title":"CytOpT 0.9.4","text":"Minor release bug fixes logo added","code":""},{"path":"https://sistm.github.io/CytOpT-R/news/index.html","id":"cytopt-091","dir":"Changelog","previous_headings":"","what":"CytOpT 0.9.1","title":"CytOpT 0.9.1","text":"Initial release R package wrapped around core Python code CytOpT library","code":""}]
